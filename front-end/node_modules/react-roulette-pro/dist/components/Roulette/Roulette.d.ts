import React from 'react';
import type { IRegularDesignProps } from '../../designs/Regular';
import type { PrizeType, IDesignPlugin, IDesignPluginProps, OptionsType, RouletteType, ClassesType } from '../../types';
declare type PrizeItemRenderFunctionType = (item: PrizeType) => React.ReactNode;
interface IRouletteProps {
    start: boolean;
    prizes: Array<PrizeType>;
    prizeIndex: number;
    onPrizeDefined?: () => void;
    spinningTime?: number;
    prizeItemRenderFunction?: PrizeItemRenderFunctionType;
    topChildren?: React.ReactNode;
    bottomChildren?: React.ReactNode;
    designPlugin?: ({ type }: IDesignPluginProps) => IDesignPlugin;
    defaultDesignOptions?: IRegularDesignProps;
    classes?: ClassesType;
    soundWhileSpinning?: string;
    options?: OptionsType;
    type?: RouletteType;
}
declare const Roulette: ({ topChildren, bottomChildren, designPlugin, prizeItemRenderFunction, prizes, defaultDesignOptions, start, prizeIndex, spinningTime, onPrizeDefined, classes, soundWhileSpinning, options, type, }: IRouletteProps) => JSX.Element;
export default Roulette;
